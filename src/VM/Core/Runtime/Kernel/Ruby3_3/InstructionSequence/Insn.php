<?php

declare(strict_types=1);

namespace RubyVM\VM\Core\Runtime\Kernel\Ruby3_3\InstructionSequence;

use RubyVM\VM\Core\Helper\EnumIntValueFindable;
use RubyVM\VM\Core\Helper\EnumNameFindable;
use RubyVM\VM\Core\Runtime\Executor\Insn\InsnInterface;

enum Insn: int implements InsnInterface
{
    use EnumIntValueFindable;
    use EnumNameFindable;

    case NOP = 0;
    case GETLOCAL = 1;
    case SETLOCAL = 2;
    case GETBLOCKPARAM = 3;
    case SETBLOCKPARAM = 4;
    case GETBLOCKPARAMPROXY = 5;
    case GETSPECIAL = 6;
    case SETSPECIAL = 7;
    case GETINSTANCEVARIABLE = 8;
    case SETINSTANCEVARIABLE = 9;
    case GETCLASSVARIABLE = 10;
    case SETCLASSVARIABLE = 11;
    case OPT_GETCONSTANT_PATH = 12;
    case GETCONSTANT = 13;
    case SETCONSTANT = 14;
    case GETGLOBAL = 15;
    case SETGLOBAL = 16;
    case PUTNIL = 17;
    case PUTSELF = 18;
    case PUTOBJECT = 19;
    case PUTSPECIALOBJECT = 20;
    case PUTSTRING = 21;
    case CONCATSTRINGS = 22;
    case ANYTOSTRING = 23;
    case TOREGEXP = 24;
    case INTERN = 25;
    case NEWARRAY = 26;
    case NEWARRAYKWSPLAT = 27;
    case DUPARRAY = 28;
    case DUPHASH = 29;
    case EXPANDARRAY = 30;
    case CONCATARRAY = 31;
    case SPLATARRAY = 32;
    case SPLATKW = 33;
    case NEWHASH = 34;
    case NEWRANGE = 35;
    case POP = 36;
    case DUP = 37;
    case DUPN = 38;
    case SWAP = 39;
    case OPT_REVERSE = 40;
    case TOPN = 41;
    case SETN = 42;
    case ADJUSTSTACK = 43;
    case DEFINED = 44;
    case DEFINEDIVAR = 45;
    case CHECKMATCH = 46;
    case CHECKKEYWORD = 47;
    case CHECKTYPE = 48;
    case DEFINECLASS = 49;
    case DEFINEMETHOD = 50;
    case DEFINESMETHOD = 51;
    case SEND = 52;
    case OPT_SEND_WITHOUT_BLOCK = 53;
    case OBJTOSTRING = 54;
    case OPT_STR_FREEZE = 55;
    case OPT_NIL_P = 56;
    case OPT_STR_UMINUS = 57;
    case OPT_NEWARRAY_SEND = 58;
    case INVOKESUPER = 59;
    case INVOKEBLOCK = 60;
    case LEAVE = 61;
    case THROW = 62;
    case JUMP = 63;
    case BRANCHIF = 64;
    case BRANCHUNLESS = 65;
    case BRANCHNIL = 66;
    case ONCE = 67;
    case OPT_CASE_DISPATCH = 68;
    case OPT_PLUS = 69;
    case OPT_MINUS = 70;
    case OPT_MULT = 71;
    case OPT_DIV = 72;
    case OPT_MOD = 73;
    case OPT_EQ = 74;
    case OPT_NEQ = 75;
    case OPT_LT = 76;
    case OPT_LE = 77;
    case OPT_GT = 78;
    case OPT_GE = 79;
    case OPT_LTLT = 80;
    case OPT_AND = 81;
    case OPT_OR = 82;
    case OPT_AREF = 83;
    case OPT_ASET = 84;
    case OPT_ASET_WITH = 85;
    case OPT_AREF_WITH = 86;
    case OPT_LENGTH = 87;
    case OPT_SIZE = 88;
    case OPT_EMPTY_P = 89;
    case OPT_SUCC = 90;
    case OPT_NOT = 91;
    case OPT_REGEXPMATCH2 = 92;
    case INVOKEBUILTIN = 93;
    case OPT_INVOKEBUILTIN_DELEGATE = 94;
    case OPT_INVOKEBUILTIN_DELEGATE_LEAVE = 95;
    case GETLOCAL_WC_0 = 96;
    case GETLOCAL_WC_1 = 97;
    case SETLOCAL_WC_0 = 98;
    case SETLOCAL_WC_1 = 99;
    case PUTOBJECT_INT2FIX_0_ = 100;
    case PUTOBJECT_INT2FIX_1_ = 101;
    case TRACE_NOP = 102;
    case TRACE_GETLOCAL = 103;
    case TRACE_SETLOCAL = 104;
    case TRACE_GETBLOCKPARAM = 105;
    case TRACE_SETBLOCKPARAM = 106;
    case TRACE_GETBLOCKPARAMPROXY = 107;
    case TRACE_GETSPECIAL = 108;
    case TRACE_SETSPECIAL = 109;
    case TRACE_GETINSTANCEVARIABLE = 110;
    case TRACE_SETINSTANCEVARIABLE = 111;
    case TRACE_GETCLASSVARIABLE = 112;
    case TRACE_SETCLASSVARIABLE = 113;
    case TRACE_OPT_GETCONSTANT_PATH = 114;
    case TRACE_GETCONSTANT = 115;
    case TRACE_SETCONSTANT = 116;
    case TRACE_GETGLOBAL = 117;
    case TRACE_SETGLOBAL = 118;
    case TRACE_PUTNIL = 119;
    case TRACE_PUTSELF = 120;
    case TRACE_PUTOBJECT = 121;
    case TRACE_PUTSPECIALOBJECT = 122;
    case TRACE_PUTSTRING = 123;
    case TRACE_CONCATSTRINGS = 124;
    case TRACE_ANYTOSTRING = 125;
    case TRACE_TOREGEXP = 126;
    case TRACE_INTERN = 127;
    case TRACE_NEWARRAY = 128;
    case TRACE_NEWARRAYKWSPLAT = 129;
    case TRACE_DUPARRAY = 130;
    case TRACE_DUPHASH = 131;
    case TRACE_EXPANDARRAY = 132;
    case TRACE_CONCATARRAY = 133;
    case TRACE_SPLATARRAY = 134;
    case TRACE_SPLATKW = 135;
    case TRACE_NEWHASH = 136;
    case TRACE_NEWRANGE = 137;
    case TRACE_POP = 138;
    case TRACE_DUP = 139;
    case TRACE_DUPN = 140;
    case TRACE_SWAP = 141;
    case TRACE_OPT_REVERSE = 142;
    case TRACE_TOPN = 143;
    case TRACE_SETN = 144;
    case TRACE_ADJUSTSTACK = 145;
    case TRACE_DEFINED = 146;
    case TRACE_DEFINEDIVAR = 147;
    case TRACE_CHECKMATCH = 148;
    case TRACE_CHECKKEYWORD = 149;
    case TRACE_CHECKTYPE = 150;
    case TRACE_DEFINECLASS = 151;
    case TRACE_DEFINEMETHOD = 152;
    case TRACE_DEFINESMETHOD = 153;
    case TRACE_SEND = 154;
    case TRACE_OPT_SEND_WITHOUT_BLOCK = 155;
    case TRACE_OBJTOSTRING = 156;
    case TRACE_OPT_STR_FREEZE = 157;
    case TRACE_OPT_NIL_P = 158;
    case TRACE_OPT_STR_UMINUS = 159;
    case TRACE_OPT_NEWARRAY_SEND = 160;
    case TRACE_INVOKESUPER = 161;
    case TRACE_INVOKEBLOCK = 162;
    case TRACE_LEAVE = 163;
    case TRACE_THROW = 164;
    case TRACE_JUMP = 165;
    case TRACE_BRANCHIF = 166;
    case TRACE_BRANCHUNLESS = 167;
    case TRACE_BRANCHNIL = 168;
    case TRACE_ONCE = 169;
    case TRACE_OPT_CASE_DISPATCH = 170;
    case TRACE_OPT_PLUS = 171;
    case TRACE_OPT_MINUS = 172;
    case TRACE_OPT_MULT = 173;
    case TRACE_OPT_DIV = 174;
    case TRACE_OPT_MOD = 175;
    case TRACE_OPT_EQ = 176;
    case TRACE_OPT_NEQ = 177;
    case TRACE_OPT_LT = 178;
    case TRACE_OPT_LE = 179;
    case TRACE_OPT_GT = 180;
    case TRACE_OPT_GE = 181;
    case TRACE_OPT_LTLT = 182;
    case TRACE_OPT_AND = 183;
    case TRACE_OPT_OR = 184;
    case TRACE_OPT_AREF = 185;
    case TRACE_OPT_ASET = 186;
    case TRACE_OPT_ASET_WITH = 187;
    case TRACE_OPT_AREF_WITH = 188;
    case TRACE_OPT_LENGTH = 189;
    case TRACE_OPT_SIZE = 190;
    case TRACE_OPT_EMPTY_P = 191;
    case TRACE_OPT_SUCC = 192;
    case TRACE_OPT_NOT = 193;
    case TRACE_OPT_REGEXPMATCH2 = 194;
    case TRACE_INVOKEBUILTIN = 195;
    case TRACE_OPT_INVOKEBUILTIN_DELEGATE = 196;
    case TRACE_OPT_INVOKEBUILTIN_DELEGATE_LEAVE = 197;
    case TRACE_GETLOCAL_WC_0 = 198;
    case TRACE_GETLOCAL_WC_1 = 199;
    case TRACE_SETLOCAL_WC_0 = 200;
    case TRACE_SETLOCAL_WC_1 = 201;
    case TRACE_PUTOBJECT_INT2FIX_0_ = 202;
    case TRACE_PUTOBJECT_INT2FIX_1_ = 203;

    public function name(): string
    {
        return $this->name;
    }

    public function value(): int
    {
        return $this->value;
    }
}
